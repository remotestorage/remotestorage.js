{
  "files": {
    "lib/promising.js": "A Promises/A+ implementation",
    "lib/tv4.js": "Tiny Validator for v4 JSON Schema",
    "lib/Math.uuid.js": "Universally-Unique-ID generator",

    "src/remotestorage.js": "Glue Code",
    "src/eventhandling.js": "Common event handling procedures",
    "src/wireclient.js": "Basic GET/PUT/DELETE client",
    "src/discover.js": "Webfinger client",
    "src/authorize.js": "OAuth2 client",
    "src/indexeddb.js": "IndexedDB caching layer",
    "src/sync.js": "Synchronizes remotestorage and local cache",
    "src/access.js": "Access configuration",
    "src/caching.js": "Caching configuration",
    "src/widget.js": "Widget controller / view implementation",
    "src/view.js": "Default View of the Widget",
    "src/debug/inspect.js": "Debugging widget that displays local and remote data",
    "src/modules.js": "The module definition API",
    "src/baseclient.js": "A high-level client, scoped to a path",
    "src/baseclient/types.js": "Type / schema handling, validations",
    "src/assets.js": "Icons, CSS and HTML templates for the widget",
    "src/legacy.js": "..."
  },
  "groups": {
    "core": {
      "label": "Core",
      "desc": "Basic requirements to connect to a remotestorage server and send / receive data.",
      "files": [
        "lib/promising.js",
        "src/remotestorage.js",
        "src/eventhandling.js",
        "src/wireclient.js",
        "src/discover.js",
        "src/authorize.js",
        "src/access.js"
      ],
      "required": true
    },
    "widget": {
      "label": "Connect Widget",
      "desc": "Provides UI to connect to a user's remotestorage.",
      "files": [
        "src/assets.js",
        "src/widget.js",
	"src/view.js"
      ],
      "default": true,
      "depends": ["core"]
    },
    "baseclient": {
      "label": "Base Client",
      "desc": "High-level client",
      "files": [
        "lib/tv4.js",
        "lib/Math.uuid.js",
        "src/baseclient.js",
        "src/baseclient/types.js"
      ],
      "default": true,
      "depends": ["core"]
    },
    "caching": {
      "label": "Caching / Synchronization",
      "desc": "Configurable local copy of (parts of) the storage and transparent synchronization.",
      "files": [
        "src/caching.js",
        "src/sync.js",
        "src/indexeddb.js"
      ],
      "default": true,
      "depends": ["core"]
    },
    "modules": {
      "label": "Module API",
      "desc": "API to declare and load modules. Each module is associated with an access scope (such as contacts, calendar, messages, ...)",
      "files": [
        "src/modules.js"
      ],
      "default": true,
      "depends": ["core", "baseclient"]
    },
    "debug": {
      "label": "Debug",
      "desc": "Debugging tools, useful for development",
      "files": [
        "src/debug/inspect.js"
      ],
      "depends": ["core"]
    },
    "legacy": {
      "files": ["src/legacy.js"]
    }
  }
}
